generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             Int              @id @default(autoincrement())
    username       String           @unique
    password       String
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt
    hasBackground  Boolean          @default(false)
    consent        Boolean          @default(false)
    BackgroundInfo BackgroundInfo[]
    TaskResponse   TaskResponse[]
}

model BackgroundInfo {
    id        Int    @id @default(autoincrement())
    gender    String
    race      String
    agerange  String
    highested String
    userId    Int
    User      User   @relation(fields: [userId], references: [id])
}

model Task {
    id                Int                    @id @default(autoincrement())
    url               String
    startTime         Int
    endTime           Int
    description       String
    expertDescription String                 @default("")
    embedding         Unsupported("vector")?
    TaskResponse      TaskResponse[]
}

model TaskResponse {
    id               Int                    @id @default(autoincrement())
    taskId           Int
    task             Task                   @relation(fields: [taskId], references: [id])
    userId           Int
    user             User                   @relation(fields: [userId], references: [id])
    cosineSimilarity Float
    dotProduct       Float
    clear            Boolean
    objective        Boolean
    complete         Boolean
    description      String
    embedding        Unsupported("vector")?
    createdAt        DateTime               @default(now())
    updatedAt        DateTime               @updatedAt
}
